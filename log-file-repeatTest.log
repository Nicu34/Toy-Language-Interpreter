Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 )
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 )
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = 0
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = 0
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 )
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 )
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 0

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 0

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> -1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 1

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 1

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 0

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == 3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( x = 1 ; y = 2 )
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 1

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( x = 1 ; y = 2 )
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
x = 1
y = 2
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
x = 1
y = 2
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
y = 2
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3
x --> 1

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
y = 2
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3
x --> 1

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( z = 3 ; w = 4 )
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
z = 3
w = 4
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
z = 3
w = 4
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
w = 4
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2
z --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
w = 4
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2
z --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2
z --> 3
w --> 4

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
print( v*10 )

Symbol Table:
v --> 3
x --> 1
y --> 2
z --> 3
w --> 4

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == 3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:

Symbol Table:
v --> 3
x --> 1
y --> 2
z --> 3
w --> 4

Out:
0
1
2
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 )
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 )
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = 0
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = 0
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 )
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 )
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 0

Out:

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 0

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 0

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 3
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> -1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 1

Out:
0

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 1

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 1

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 5
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 0

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 2

Out:
0
1

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 2

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 7
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 1

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 3

Out:
0
1
2

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 3

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 3

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 9
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 2

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 4

Out:
0
1
2
3

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 4

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 4

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 11
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 3

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 5

Out:
0
1
2
3
4

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 5

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 5

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 13
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 4

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 15
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 5

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 17
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 6

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 19
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 7

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 21
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 8

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 23
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 9

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 25
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 10

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 27
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 11

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 29
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 12

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 31
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 13

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 33
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 14

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 35
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 15

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 37
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 16

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 39
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 17

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 41
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 18

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 43
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 19

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 45
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 20

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 47
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 21

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 49
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 22

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 51
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 23

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 53
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 24

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 55
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 25

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 57
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 26

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 59
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 27

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 61
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 28

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 63
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 29

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 65
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 30

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 67
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 31

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 69
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 32

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 71
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 33

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 73
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 34

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 75
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 35

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 77
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 36

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 79
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 37

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 81
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 38

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 83
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 39

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 85
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 40

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 87
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 41

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 89
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 42

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 91
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 43

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 93
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 44

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 95
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 45

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 97
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 46

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 99
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 47

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 101
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 48

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 103
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 49

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 105
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 50

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 107
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 51

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 109
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 52

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 111
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 53

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 113
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 54

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 115
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 55

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 117
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 56

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 119
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 57

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 121
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 58

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 123
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 59

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 125
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 60

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 127
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 61

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 129
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 62

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 131
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 63

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 133
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 64

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 135
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 65

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 137
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 66

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 139
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 67

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 141
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 68

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 143
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 69

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 145
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 70

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 147
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 71

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 149
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 72

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 151
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 73

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 153
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 74

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 155
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 75

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 157
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 76

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 159
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 77

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 161
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 78

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 163
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 79

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 165
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 80

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 167
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 81

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 169
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 82

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 171
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 83

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 173
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 84

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 175
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 85

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 177
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 86

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 179
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 87

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 181
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 88

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 183
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 89

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 185
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 90

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 187
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 91

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 189
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 92

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 191
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 93

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 193
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 94

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 195
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 95

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 197
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 96

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 199
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 97

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 201
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 98

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 203
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 99

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 205
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 100

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 207
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 101

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 209
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 102

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 211
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 103

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 213
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 104

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 215
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 105

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 217
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 106

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 219
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 107

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 221
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 108

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 223
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 109

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 225
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 110

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 227
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 111

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 229
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 112

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 231
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 113

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 233
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 114

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 235
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 115

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 237
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 116

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 239
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 117

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 241
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 118

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 243
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 119

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 245
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 120

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 247
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 121

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 249
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 122

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 251
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 123

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 253
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 124

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 255
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 125

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 257
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 126

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 259
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 127

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 261
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 128

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 263
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 129

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 265
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 130

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 267
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 131

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 269
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 132

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 271
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 133

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 273
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 134

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 275
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 135

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 277
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 136

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 279
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 137

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 281
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 138

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 283
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 139

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 285
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 140

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 287
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 141

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
( print( v ) ; v = v-1 )

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 144

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 144

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
print( v )
v = v-1

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 144

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
ForkStatement{statement=( print( v ) ; v = v-1 )}
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 144

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:
v = v-1

Symbol Table:
v --> 143

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 1
Original program: ( ( ( v = 0 ; repeat ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) until v == -3 ) ; ( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) ) ) ; print( v*10 ) )
ExeStack:
v = v+1
while ( v == -3 ) { ( ForkStatement{statement=( print( v ) ; v = v-1 )} ; v = v+1 ) }
( ( x = 1 ; y = 2 ) ; ( z = 3 ; w = 4 ) )
print( v*10 )

Symbol Table:
v --> 144

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

Id: 289
Original program: ( print( v ) ; v = v-1 )
ExeStack:

Symbol Table:
v --> 142

Out:
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143

File Table:

Heap Table:

Latch table:

=================================================================================

